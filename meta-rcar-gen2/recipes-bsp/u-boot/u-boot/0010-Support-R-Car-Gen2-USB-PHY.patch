From cc3dc6d4397da9972c4175f8c079dfaeab313649 Mon Sep 17 00:00:00 2001
From: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
Date: Fri, 23 Oct 2015 23:40:26 +0300
Subject: [PATCH] Support R-Car Gen2 USB PHY

Support R-Car Gen2 USB PHY in order to route usb0/2 ports to PCI bus.

Signed-off-by: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
---
 drivers/usb/host/ehci-r8a779x.c   |  25 ++++++++
 drivers/usb/phy/Makefile          |   1 +
 drivers/usb/phy/rmobile_usb_phy.c | 124 ++++++++++++++++++++++++++++++++++++++
 include/configs/r8a7790stout.h    |   1 +
 4 files changed, 151 insertions(+)
 create mode 100644 drivers/usb/phy/rmobile_usb_phy.c

diff --git a/drivers/usb/host/ehci-r8a779x.c b/drivers/usb/host/ehci-r8a779x.c
index d893f27..c2f7070 100644
--- a/drivers/usb/host/ehci-r8a779x.c
+++ b/drivers/usb/host/ehci-r8a779x.c
@@ -42,6 +42,18 @@
 
 #define SMSTPCR703      0x08
 
+#if defined(CONFIG_USB_PHY_RMOBILE)
+/* USB General control register 2 (UGCTRL2) */
+#define USBHS_UGCTRL2_USB2SEL		(0x1 << 31)
+#define USBHS_UGCTRL2_USB2SEL_PCI	0
+#define USBHS_UGCTRL2_USB2SEL_USB30	(1 << 31)
+#define USBHS_UGCTRL2_USB0SEL		(0x3 << 4)
+#define USBHS_UGCTRL2_USB0SEL_PCI	(1 << 4)
+#define USBHS_UGCTRL2_USB0SEL_HS_USB	(3 << 4)
+extern void rmobile_usb_phy_init(int mask, int value);
+extern void rmobile_usb_phy_exit(void);
+#endif
+
 static u32 usb_base_address[CONFIG_USB_MAX_CONTROLLER_COUNT] = {
 	0xee080000,	/* USB0 (EHCI) */
 #if defined(CONFIG_MACH_LAGER) || defined(CONFIG_MACH_R8A7790STOUT)
@@ -80,6 +92,12 @@ int ehci_hcd_stop(int index)
 		writel(data, SMSTPCR7);
 	}
 
+#if defined(CONFIG_USB_PHY_RMOBILE)
+	if (index == (CONFIG_USB_MAX_CONTROLLER_COUNT-1)) {
+		rmobile_usb_phy_exit();
+	}
+#endif
+
 	return 0;
 }
 
@@ -91,6 +109,13 @@ int ehci_hcd_init(int index, struct ehci_hccr **hccr, struct ehci_hcor **hcor)
 	struct rmobile_ehci_reg *rehci;
 	uint32_t cap_base;
 
+#if defined(CONFIG_USB_PHY_RMOBILE)
+	if (index == 0) {
+		rmobile_usb_phy_init(USBHS_UGCTRL2_USB0SEL, USBHS_UGCTRL2_USB0SEL_PCI);
+		rmobile_usb_phy_init(USBHS_UGCTRL2_USB2SEL, USBHS_UGCTRL2_USB2SEL_PCI);
+	}
+#endif
+
 	base = usb_base_address[index];
 	phys_base = base;
 
diff --git a/drivers/usb/phy/Makefile b/drivers/usb/phy/Makefile
index 5547570..2619cb8 100644
--- a/drivers/usb/phy/Makefile
+++ b/drivers/usb/phy/Makefile
@@ -23,6 +23,7 @@ include $(TOPDIR)/config.mk
 LIB	:= $(obj)libusb_phy.o
 
 COBJS-$(CONFIG_TWL4030_USB) += twl4030.o
+COBJS-$(CONFIG_USB_PHY_RMOBILE) += rmobile_usb_phy.o
 
 COBJS	:= $(COBJS-y)
 SRCS	:= $(COBJS:.o=.c)
diff --git a/drivers/usb/phy/rmobile_usb_phy.c b/drivers/usb/phy/rmobile_usb_phy.c
new file mode 100644
index 0000000..912a929
--- /dev/null
+++ b/drivers/usb/phy/rmobile_usb_phy.c
@@ -0,0 +1,124 @@
+/*
+ * Renesas R-Car USB PHY support
+ *
+ * Copyright (C) 2015 Renesas Electronics Corporation
+ * Copyright (C) 2015 Cogent Embedded, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <common.h>
+#include <malloc.h>
+#include <asm/processor.h>
+#include <asm/mach-types.h>
+#include <asm/io.h>
+#include <asm/errno.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/gpio.h>
+#include <asm/arch/rmobile.h>
+
+#define USBHS_LPSTS			0xe6590102
+#define USBHS_UGCTRL			0xe6590180
+#define USBHS_UGCTRL2			0xe6590184
+#define USBHS_UGSTS			0xe6590188
+
+/* Low Power Status register (LPSTS) */
+#define USBHS_LPSTS_SUSPM		(1 << 14)
+
+/* USB General control register (UGCTRL) */
+#define USBHS_UGCTRL_CONNECT		(1 << 2)
+#define USBHS_UGCTRL_PLLRESET		(1 << 0)
+
+/* USB General control register 2 (UGCTRL2) */
+#define USBHS_UGCTRL2_USB2SEL		(0x1 << 31)
+#define USBHS_UGCTRL2_USB2SEL_PCI	0
+#define USBHS_UGCTRL2_USB2SEL_USB30	(1 << 31)
+#define USBHS_UGCTRL2_USB0SEL		(0x3 << 4)
+#define USBHS_UGCTRL2_USB0SEL_PCI	(1 << 4)
+#define USBHS_UGCTRL2_USB0SEL_HS_USB	(3 << 4)
+
+/* USB General status register (UGSTS) */
+#define USBHS_UGSTS_LOCK		(0x3 << 8)
+
+#define NUM_USB_CHANNELS		2
+
+#define USBHS_MSTP704			(1 << 4)
+
+void rmobile_usb_phy_init(int mask, int value)
+{
+	u32 val;
+
+	/* enable ubshs clk */
+	val = readl(MSTPSR7);
+	val &= ~USBHS_MSTP704;
+	writel(val, SMSTPCR7);
+
+	val = readl(USBHS_UGCTRL2);
+	val &= ~mask;
+	val |= value;
+	writel(val, USBHS_UGCTRL2);
+}
+
+void rmobile_usb_phy_exit(void)
+{
+	u32 val;
+
+	/* disable ubshs clk */
+	val = readl(MSTPSR7);
+	val |= USBHS_MSTP704;
+	writel(val, SMSTPCR7);
+}
+
+void rmobile_usb_phy_power_on(int value)
+{
+	u32 val;
+	int i;
+
+	/* Skip if it's not USBHS */
+	if (value != USBHS_UGCTRL2_USB0SEL_HS_USB)
+		return 0;
+
+	/* Power on USBHS PHY */
+	val = readl(USBHS_UGCTRL);
+	val &= ~USBHS_UGCTRL_PLLRESET;
+	writel(val, USBHS_UGCTRL);
+
+	val = readw(USBHS_LPSTS);
+	val |= USBHS_LPSTS_SUSPM;
+	writew(val, USBHS_LPSTS);
+
+	for (i = 0; i < 20; i++) {
+		val = readl(USBHS_UGSTS);
+		if ((val & USBHS_UGSTS_LOCK) == USBHS_UGSTS_LOCK) {
+			val = readl(USBHS_UGCTRL);
+			val |= USBHS_UGCTRL_CONNECT;
+			writel(val, USBHS_UGCTRL);
+			return;
+		}
+		udelay(1);
+	}
+}
+
+void rmobile_usb_phy_power_off(int value)
+{
+	u32 val;
+
+	/* Skip if it's not USBHS */
+	if (value != USBHS_UGCTRL2_USB0SEL_HS_USB)
+		return 0;
+
+	/* Power off USBHS PHY */
+	val = readl(USBHS_UGCTRL);
+	val &= ~USBHS_UGCTRL_CONNECT;
+	writel(val, USBHS_UGCTRL);
+
+	val = readw(USBHS_LPSTS);
+	val &= ~USBHS_LPSTS_SUSPM;
+	writew(val, USBHS_LPSTS);
+
+	val = readl(USBHS_UGCTRL);
+	val |= USBHS_UGCTRL_PLLRESET;
+	writel(val, USBHS_UGCTRL);
+}
diff --git a/include/configs/r8a7790stout.h b/include/configs/r8a7790stout.h
index 706f20b..c427237 100644
--- a/include/configs/r8a7790stout.h
+++ b/include/configs/r8a7790stout.h
@@ -189,6 +189,7 @@
 #define CONFIG_USB_EHCI
 #define CONFIG_USB_EHCI_R8A779x
 #define CONFIG_USB_MAX_CONTROLLER_COUNT	3
+#define CONFIG_USB_PHY_RMOBILE
 
 /* SD */
 #define CONFIG_MMC			1
-- 
1.9.1

