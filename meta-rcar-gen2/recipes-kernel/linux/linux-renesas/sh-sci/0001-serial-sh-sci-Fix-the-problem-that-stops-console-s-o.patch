From ddd55785df8f42871e1f9f1e3c5c14c1064af36e Mon Sep 17 00:00:00 2001
From: Hiroki Negishi <hiroki.negishi.zr@hitachi-solutions.com>
Date: Thu, 25 Jun 2015 16:48:18 +0900
Subject: [PATCH 01/13] serial: sh-sci: Fix the problem that stops console's
 output in rebooting

When using SCIFAx, the problem that stops serial console's output
in rebooting occurrs. The sequence is as follows.

1. Init process kills getty process.
2. Init process outputs message with using open()/write()/close()
/dev/console.

In close(), sci_shutdown() in SCIF driver is called and disables
transmission.
When using SCIFAx, data is left in the transmit FIFO.

3. Getty process killed from init process executes tcsetattr().

In tcsetattr(), sci_reset() in SCIF driver is called
and waits for completing transmission.
However, because transmission was disabled, transmission doesn't complete
forever.
(When using SCIFx, data is not left in executing close().
Therefore, the wait in sci_reset() doesn't occur.)

This patch fixes sci_shutdown() to wait for completing transmission.

Signed-off-by: Shinichi Yamada <shinichi.yamada.ku@ps.hitachi-solutions.com>
Signed-off-by: Hiroki Negishi <hiroki.negishi.zr@hitachi-solutions.com>
Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
---
 drivers/tty/serial/sh-sci.c | 24 ++++++++++++++++++++++--
 1 file changed, 22 insertions(+), 2 deletions(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index a1b786b..08b1266 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1883,6 +1883,27 @@ static int sci_startup(struct uart_port *port)
 	return 0;
 }
 
+#define TX_DRAIN_LOOP_MAX 200
+
+static void sci_drain_tx(struct uart_port *port)
+{
+	unsigned int status;
+	unsigned int mask;
+	int i;
+
+	serial_port_out(port, SCSCR, SCSCR_TE);
+
+	mask = SCxSR_TEND(port);
+	for (i = 0; i < TX_DRAIN_LOOP_MAX; i++) {
+		status = serial_port_in(port, SCxSR);
+		if ((status & mask) == mask)
+			break;
+		mdelay(2);
+	}
+
+	serial_port_out(port, SCSCR, 0x00);
+}
+
 static void sci_shutdown(struct uart_port *port)
 {
 	struct sci_port *s = to_sci_port(port);
@@ -1893,10 +1914,9 @@ static void sci_shutdown(struct uart_port *port)
 	spin_lock_irqsave(&port->lock, flags);
 	sci_stop_rx(port);
 	sci_stop_tx(port);
+	sci_drain_tx(port);
 	spin_unlock_irqrestore(&port->lock, flags);
 
-	serial_port_out(port, SCSCR, 0x00);
-
 	sci_free_dma(port);
 	sci_free_irq(s);
 }
-- 
1.9.1

