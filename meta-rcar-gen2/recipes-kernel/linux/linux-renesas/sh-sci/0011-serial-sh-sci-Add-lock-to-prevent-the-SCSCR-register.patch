From 6f96fbf5ba9ac18e1e50e7ebd62b7dc29140fd10 Mon Sep 17 00:00:00 2001
From: Mitsuru Ezo <mitsuru.ezo.pz@ps.hitachi-solutions.com>
Date: Wed, 14 Oct 2015 14:25:44 +0900
Subject: [PATCH 11/13] serial: sh-sci: Add lock to prevent the SCSCR register
 access conflict

sci_start_tx() changes the SCSCR register, but does not lock sci_port.
Therefore, a caller should lock sci_port.

sci_tx_dma_release() does not lock sci_port in calling sci_start_tx().
This may cause conflicts of settings to the SCSCR register.
So, this patch adds lock in sci_tx_dma_release().

Signed-off-by: Mitsuru Ezo <mitsuru.ezo.pz@ps.hitachi-solutions.com>
Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
---
 drivers/tty/serial/sh-sci.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 645f1f2..3007fe1 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1401,12 +1401,16 @@ static void sci_tx_dma_release(struct sci_port *s, bool enable_pio)
 {
 	struct dma_chan *chan = s->chan_tx;
 	struct uart_port *port = &s->port;
+	unsigned long flags;
 
 	s->chan_tx = NULL;
 	s->cookie_tx = -EINVAL;
 	dma_release_channel(chan);
-	if (enable_pio)
+	if (enable_pio) {
+		spin_lock_irqsave(&port->lock, flags);
 		sci_start_tx(port);
+		spin_unlock_irqrestore(&port->lock, flags);
+	}
 }
 
 static void sci_submit_rx(struct sci_port *s)
-- 
1.9.1

