From 14dac3ab246d8ecbab1442ea4969ee9a1b80ac6d Mon Sep 17 00:00:00 2001
From: Ryuichi Ando <ryuichi.ando.jz@ps.hitachi-solutions.com>
Date: Tue, 28 Jul 2015 20:28:33 +0900
Subject: [PATCH 05/13] serial: sh-sci: Fix hang-up in rebooting with DMA
 transfer enabled

If flush of UART ring buffer occurs just before starting DMA transfer
(after executing schedule_work and before executing work_fn_tx),
DMA transfer size becomes 0, and then SCIF driver calls BUG_ON.
Therefore Linux hangs up.

In order to avoid hang-up, this patch modifies BUG_ON with the condition
same.

Signed-off-by: Ryuichi Ando <ryuichi.ando.jz@ps.hitachi-solutions.com>
Signed-off-by: Hiroki Negishi <hiroki.negishi.zr@hitachi-solutions.com>
Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
---
 drivers/tty/serial/sh-sci.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 21c797c..330b7b1 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1565,7 +1565,10 @@ static void work_fn_tx(struct work_struct *work)
 		CIRC_CNT_TO_END(xmit->head, xmit->tail, UART_XMIT_SIZE));
 	spin_unlock_irq(&port->lock);
 
-	BUG_ON(!sg_dma_len(sg));
+	if (sg_dma_len(sg) == 0) {
+		s->cookie_tx = -EINVAL;
+		return;
+	}
 
 	desc = dmaengine_prep_slave_sg(chan,
 			sg, s->sg_len_tx, DMA_MEM_TO_DEV,
-- 
1.9.1

