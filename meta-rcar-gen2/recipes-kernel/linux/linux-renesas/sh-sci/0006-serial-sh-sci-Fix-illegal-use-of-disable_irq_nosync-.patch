From f76321458b56ad651563fa82bce43ad5b1c0a3a5 Mon Sep 17 00:00:00 2001
From: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Date: Fri, 24 Jul 2015 11:04:06 +0900
Subject: [PATCH 06/13] serial: sh-sci: Fix illegal use of disable_irq_nosync
 in error interrupt

If error interrupt occurs during the DMA transfer enabled,
the sci_er_interrupt() and sci_rx_interrupt() in sci_mpxed_interrupt()
calls disable_irq_nosync() twice.
This patch avoids called disable_irq_nosync() in sci_er_interrupt().

Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
---
 drivers/tty/serial/sh-sci.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 330b7b1..5019314 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -985,6 +985,7 @@ static irqreturn_t sci_tx_interrupt(int irq, void *ptr)
 static irqreturn_t sci_er_interrupt(int irq, void *ptr)
 {
 	struct uart_port *port = ptr;
+	struct sci_port *s = to_sci_port(port);
 
 	/* Handle errors */
 	if (port->type == PORT_SCI) {
@@ -995,7 +996,9 @@ static irqreturn_t sci_er_interrupt(int irq, void *ptr)
 		}
 	} else {
 		sci_handle_fifo_overrun(port);
-		sci_rx_interrupt(irq, ptr);
+		if ((!s->chan_rx) && (port->type != PORT_SCIFA) &&
+			(port->type != PORT_SCIFB))
+			sci_rx_interrupt(irq, ptr);
 	}
 
 	serial_port_out(port, SCxSR, SCxSR_ERROR_CLEAR(port));
-- 
1.9.1

