From 16a094a0dddd6b731f25579494e195f948acc502 Mon Sep 17 00:00:00 2001
From: Mitsuru Ezo <mitsuru.ezo.pz@ps.hitachi-solutions.com>
Date: Wed, 14 Oct 2015 14:07:33 +0900
Subject: [PATCH 10/13] serial: sh-sci: Fix unlocked access to SCSCR register

The SCSCR register access in sci_break_ctl() is not locked.
The unlocked access may cause conflicts of settings to the SCSCR register.
Therefore, this patch adds lock during register access in sci_break_ctl().

Signed-off-by: Mitsuru Ezo <mitsuru.ezo.pz@ps.hitachi-solutions.com>
Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
---
 drivers/tty/serial/sh-sci.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index c2d826c..645f1f2 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1673,6 +1673,7 @@ static void sci_break_ctl(struct uart_port *port, int break_state)
 	struct sci_port *s = to_sci_port(port);
 	struct plat_sci_reg *reg = sci_regmap[s->cfg->regtype] + SCSPTR;
 	unsigned short scscr, scsptr;
+	unsigned long flags;
 
 	/* check wheter the port has SCSPTR */
 	if (!reg->size) {
@@ -1683,6 +1684,7 @@ static void sci_break_ctl(struct uart_port *port, int break_state)
 		return;
 	}
 
+	spin_lock_irqsave(&port->lock, flags);
 	scsptr = serial_port_in(port, SCSPTR);
 	scscr = serial_port_in(port, SCSCR);
 
@@ -1696,6 +1698,7 @@ static void sci_break_ctl(struct uart_port *port, int break_state)
 
 	serial_port_out(port, SCSPTR, scsptr);
 	serial_port_out(port, SCSCR, scscr);
+	spin_unlock_irqrestore(&port->lock, flags);
 }
 
 #ifdef CONFIG_SERIAL_SH_SCI_DMA
-- 
1.9.1

