From ec0ef86f2024622765e3d0ee76f285f6842ea55f Mon Sep 17 00:00:00 2001
From: Takanari Hayama <taki@igel.co.jp>
Date: Thu, 30 Oct 2014 17:19:51 +0900
Subject: [PATCH 16/22] workaround: refer to the global gl_renderer when
 destroying surfaces.

This supposed to be a short term workaround to fix the issue when
surfaces are destroyed.

We should find a solution that does not modify gl-renderer.
---
 src/gl-renderer.c |    9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/src/gl-renderer.c b/src/gl-renderer.c
index 63af75d..507bd2b 100644
--- a/src/gl-renderer.c
+++ b/src/gl-renderer.c
@@ -1321,18 +1321,17 @@ surface_state_destroy(struct gl_surface_state *gs, struct gl_renderer *gr)
 	free(gs);
 }
 
+static struct gl_renderer *__gr;
+
 static void
 surface_state_handle_surface_destroy(struct wl_listener *listener, void *data)
 {
 	struct gl_surface_state *gs;
-	struct gl_renderer *gr;
 
 	gs = container_of(listener, struct gl_surface_state,
 			  surface_destroy_listener);
 
-	gr = get_renderer(gs->surface->compositor);
-
-	surface_state_destroy(gs, gr);
+	surface_state_destroy(gs, __gr);
 }
 
 static void
@@ -1953,6 +1952,8 @@ gl_renderer_create(struct weston_compositor *ec, EGLNativeDisplayType display,
 	ec->capabilities |= WESTON_CAP_ROTATION_ANY;
 	ec->capabilities |= WESTON_CAP_CAPTURE_YFLIP;
 
+	__gr = gr;
+
 	if (gl_renderer_setup_egl_extensions(ec) < 0)
 		goto err_egl;
 
-- 
1.7.9.5

