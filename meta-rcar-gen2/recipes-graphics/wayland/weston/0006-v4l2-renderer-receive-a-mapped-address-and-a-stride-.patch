From 7bcf5335543973549f906e9b911c5eba19d43135 Mon Sep 17 00:00:00 2001
From: Takanari Hayama <taki@igel.co.jp>
Date: Thu, 21 Aug 2014 09:36:47 +0900
Subject: [PATCH 06/22] v4l2-renderer: receive a mapped address and a stride
 of output buffer.

In order to support read_pixels, we need to be able to access the output
buffer from user space. We should pass not only DMABUF, but also its
stride and mapped address.
---
 src/compositor-drm.c |    8 ++++++--
 src/v4l2-renderer.c  |    9 +++++++--
 src/v4l2-renderer.h  |    8 +++++++-
 3 files changed, 20 insertions(+), 5 deletions(-)

diff --git a/src/compositor-drm.c b/src/compositor-drm.c
index eaddea7..38f1618 100644
--- a/src/compositor-drm.c
+++ b/src/compositor-drm.c
@@ -561,6 +561,7 @@ drm_output_render_v4l2(struct drm_output *output, pixman_region32_t *damage)
 {
 	struct weston_compositor *ec = output->base.compositor;
 	pixman_region32_t total_damage, previous_damage;
+	struct v4l2_bo_state bo;
 
 	pixman_region32_init(&total_damage);
 	pixman_region32_init(&previous_damage);
@@ -572,9 +573,12 @@ drm_output_render_v4l2(struct drm_output *output, pixman_region32_t *damage)
 
 	output->current_image ^= 1;
 
+	bo.dmafd = output->dumb[output->current_image]->dmafd;
+	bo.map = output->dumb[output->current_image]->map;
+	bo.stride = output->dumb[output->current_image]->stride;
+
 	output->next = output->dumb[output->current_image];
-	v4l2_renderer->set_output_buffer(&output->base,
-					 output->dumb[output->current_image]->dmafd);
+	v4l2_renderer->set_output_buffer(&output->base, &bo);
 
 	ec->renderer->repaint_output(&output->base, &total_damage);
 
diff --git a/src/v4l2-renderer.c b/src/v4l2-renderer.c
index 0de151b..15043c0 100644
--- a/src/v4l2-renderer.c
+++ b/src/v4l2-renderer.c
@@ -67,6 +67,8 @@
 
 struct v4l2_output_state {
 	struct v4l2_renderer_output *output;
+	uint32_t stride;
+	void *map;
 };
 
 struct v4l2_renderer {
@@ -861,11 +863,14 @@ error:
 }
 
 static void
-v4l2_renderer_output_set_buffer(struct weston_output *output, int dmafd)
+v4l2_renderer_output_set_buffer(struct weston_output *output, struct v4l2_bo_state *bo)
 {
 	struct v4l2_output_state *vo = get_output_state(output);
 
-	device_interface->set_output_buffer(vo->output, dmafd);
+	vo->stride = bo->stride;
+	vo->map = bo->map;
+
+	device_interface->set_output_buffer(vo->output, bo->dmafd);
 
 	return;
 }
diff --git a/src/v4l2-renderer.h b/src/v4l2-renderer.h
index 3f10ee7..ecd03cc 100644
--- a/src/v4l2-renderer.h
+++ b/src/v4l2-renderer.h
@@ -27,9 +27,15 @@
 
 #include "compositor.h"
 
+struct v4l2_bo_state {
+	int dmafd;
+	void *map;
+	uint32_t stride;
+};
+
 struct v4l2_renderer_interface {
 	int (*init)(struct weston_compositor *ec, int drm_fd, char *drm_fn);
 	int (*output_create)(struct weston_output *output);
 	void (*output_destroy)(struct weston_output *output);
-	void (*set_output_buffer)(struct weston_output *output, int dma_fd);
+	void (*set_output_buffer)(struct weston_output *output, struct v4l2_bo_state *ro);
 };
-- 
1.7.9.5

