From 1c4d6501ad7879e02645ce1910b45d676e1e57ac Mon Sep 17 00:00:00 2001
From: Takanari Hayama <taki@igel.co.jp>
Date: Fri, 22 Aug 2014 11:05:08 +0900
Subject: [PATCH 08/22] v4l2-renderer: support read_pixels.

For now, we do memcpy().
---
 src/v4l2-renderer.c |   30 ++++++++++++++++++++++++++++--
 1 file changed, 28 insertions(+), 2 deletions(-)

diff --git a/src/v4l2-renderer.c b/src/v4l2-renderer.c
index ec6803f..3d80922 100644
--- a/src/v4l2-renderer.c
+++ b/src/v4l2-renderer.c
@@ -121,9 +121,35 @@ v4l2_renderer_read_pixels(struct weston_output *output,
 			 uint32_t x, uint32_t y,
 			 uint32_t width, uint32_t height)
 {
-	// struct v4l2_output_state *vo = get_output_state(output);
+	struct v4l2_output_state *vo = get_output_state(output);
+	uint32_t v, len = width * 4, stride = vo->stride * 4;
+	void *src, *dst;
 
-	// TODO: we need to implement this... maybe later.
+	switch(format) {
+	case PIXMAN_a8r8g8b8:
+		break;
+	default:
+		return -1;
+	}
+
+	if (x == 0 && y == 0 &&
+	    width == (uint32_t)output->current_mode->width &&
+	    height == (uint32_t)output->current_mode->height &&
+	    vo->stride == len) {
+		DBG("%s: copy entire buffer at once\n", __func__);
+		// TODO: we may want to optimize this using underlying
+		// V4L2 MC hardware if possible.
+		memcpy(pixels, vo->map, vo->stride * height);
+		return 0;
+	}
+
+	src = vo->map + x * 4 + y * stride;
+	dst = pixels;
+	for (v = y; v < height; v++) {
+		memcpy(dst, src, len);
+		src += stride;
+		dst += len;
+	}
 
 	return 0;
 }
-- 
1.7.9.5

